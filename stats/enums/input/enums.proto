/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package android.input;

option java_outer_classname = "InputProtoEnums";
option java_multiple_files = true;

/**
 * Contains the key events that are pressed from keyboard
 * Logged in KeyboardSystemsEventReported atom
 */
enum KeyboardSystemEvent {
    HOME = 1;
    RECENT_APPS = 2;
    BACK = 3;
    APP_SWITCH = 4;
    LAUNCH_ASSISTANT = 5;
    LAUNCH_VOICE_ASSISTANT = 6;
    LAUNCH_SYSTEM_SETTINGS = 7;
    TOGGLE_NOTIFICATION_PANEL = 8;
    TOGGLE_TASKBAR = 9;
    TAKE_SCREENSHOT = 10;
    OPEN_SHORTCUT_HELPER = 11;
    BRIGHTNESS_UP = 12;
    BRIGHTNESS_DOWN = 13;
    KEYBOARD_BACKLIGHT_UP = 14;
    KEYBOARD_BACKLIGHT_DOWN = 15;
    KEYBOARD_BACKLIGHT_TOGGLE = 16;
    VOLUME_UP = 17;
    VOLUME_DOWN = 18;
    VOLUME_MUTE = 19;
    ALL_APPS = 20;
    LAUNCH_SEARCH = 21;
    LANGUAGE_SWITCH = 22;
    ACCESSIBILITY_ALL_APPS = 23;
    TOGGLE_CAPS_LOCK = 24;
    SYSTEM_MUTE = 25;
    SPLIT_SCREEN_NAVIGATION = 26;
}

/**
 * Criteria for keyboard layout selection
 */
enum KeyboardLayoutSelectionCriteria {
    // Manual selection by user
    USER = 0;
    // Auto-detection based on device provided language tag and layout type
    DEVICE = 1;
    // Auto-detection based on IME provided language tag and layout type
    VIRTUAL_KEYBOARD = 2;
    // Default selection
    DEFAULT = 3;
}

/**
 * Contains usage type/category definitions.
 * Logged in InputDeviceUsageReported atom.
 */
enum InputDeviceUsageType {
    UNKNOWN = 0;
    // Miscellaneous buttons (such as volume, power, stylus buttons, remote controls etc.)
    // that are not categorized a full keyboards.
    BUTTONS = 1;
    // An alphabetical physical keyboard.
    KEYBOARD = 2;
    // A D-Pad.
    DPAD = 3;
    // Gamepad buttons.
    GAMEPAD = 4;
    // A joystick, like one part of a gaming controller.
    JOYSTICK = 5;
    // A mouse that controls an on-screen cursor. (Touchpads are not included)
    MOUSE = 6;
    // A mouse that is operating under Pointer Capture mode.
    MOUSE_CAPTURED = 7;
    // A touchpad (trackpad) that controls an on-screen cursor.
    TOUCHPAD = 8;
    // A touchpad that is operating under Pointer Capture mode.
    TOUCHPAD_CAPTURED = 9;
    // A rotary encoder.
    ROTARY_ENCODER = 10;
    // A stylus, where touches are mapped directly to the display.
    STYLUS_DIRECT = 11;
    // A stylus that interacts with a display indirectly, such as by controlling an
    // on-screen cursor. This includes external drawing tablets that don't have a built-in
    // display.
    STYLUS_INDIRECT = 12;
    // A stylus that reports some information through Bluetooth that is then fused
    // with touch information from the built-in touchscreen.
    STYLUS_FUSED = 13;
    // A touch device that navigates through the UI using gestures.
    TOUCH_NAVIGATION = 14;
    // A touchscreen, where touches are mapped directly to the display.
    TOUCHSCREEN = 15;
    // A trackball.
    TRACKBALL = 16;
};

/**
 * Contains buses through which an input device can be connected.
 * Logged in InputDeviceUsageReported atom.
 */
enum InputDeviceBus {
    OTHER = 0;
    USB = 1;
    BLUETOOTH = 2;
}
